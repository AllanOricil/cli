name: ut and tarballs

on:
  pull_request:
    types: [opened, reopened, synchronize]

concurrency:
  group: ut-tarballs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  yarn-lockfile-check:
    uses: salesforcecli/github-workflows/.github/workflows/lockFileCheck.yml@main

  ut:
    uses: salesforcecli/github-workflows/.github/workflows/unitTest.yml@main
    secrets: inherit

  tarballs:
    uses: salesforcecli/github-workflows/.github/workflows/tarballs.yml@main
    secrets: inherit

  manifest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
      - run: yarn install
      - run: yarn build
      - run: yarn oclif manifest
      - uses: actions/upload-artifact@v2
        with:
          name: manifest
          path: oclif.manifest.json

  get-jit-plugins:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          JIT=$(jq -c '.oclif.jitPlugins | keys' package.json)
          echo "Found JIT plugins:"
          echo "$JIT"
          echo "jit='$JIT'" >> "$GITHUB_OUTPUT"

  echo-jit-plugins:
    needs: get-jit-plugins
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "JIT to JSON:"
          echo ${{ toJson(needs.get-jit-plugins.outputs.jit) }}
          echo "JIT from JSON:"
          echo ${{ fromJSON(needs.get-jit-plugins.outputs.jit) }}

  jit-install:
    needs: [manifest, get-jit-plugins]
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        jitPlugins:
          - '@salesforce/plugin-community'
          - '@salesforce/plugin-env'
    runs-on: ${{matrix.os}}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
      - run: yarn install
      - run: yarn build
      - uses: actions/download-artifact@v2
        with:
          name: manifest
      - run: yarn sf-release cli:install:jit:test --jit-plugin ${{matrix.jitPlugins}}

  artifacts:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.SVC_CLI_BOT_GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: yarn
      - run: yarn install
      - run: npm install -g @salesforce/plugin-release-management
      - run: yarn test:deprecation-policy
